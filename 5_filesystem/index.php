<? /*

        1) РАБОТА В ФАЙЛОВОЙ СИСТЕМОЙ

		По сути все что открывается блокнотом, можно открыть php
		Для остальных существуйет множество расширений

			file_exists('относительный путь(../gallery/js.js) или абсолютный путь('/gallery/js.js')');  - существуйет ли файл или директория; лучше писать относитлеьный путю
			is_file()               - Это файл?
			is_dir()                - это папка?
			is_writable()           - возможно ли открыть файл для записи
			is_readable()           - возможно ли открыть файл для чтения
			unlink()                - удалитьб файл
			copy()                  - копировать файл
			rename('откуда','куда')  - переименовать файл, им же можно копировать


			filesize()              - размер файла в байтах
			basename('путь')        - имя файла (не проверяют файл на корректность)
			pathinfo('путь')        - инфо о файле(расширение, имя) Не проверяют файл на корректность, лучше использовать его


            НИЗКИЙ УРОВЕНЬ
					$f = fopen('относительный путь или абсолютный путь', режим лучше в двойных кавычках ) - все сохраняется в оперативную память
								r   - чтение , курсор в начало
								r+  - чтение и запись , курсор в начало ( дописывать вначало ) , если нет файла, вернет ошибка
								w   - только на запись , курсор вначало если файла нет , пытается создать, если есть все удаляется (как бубто открывается пустой файл)
								w+  - чтение и запись , курсор в начало , (как бубто открывается пустой файл)
								a   - чтение , курсор вконец ( дописывать вконец )
								a+  - чтение и запись ,  курсор вконец , если файла нет , пытается создать  ( дописывать вконец )

					fclose($f) - закрыть

					fgetc($f)           - возвращает один символ и курсор смещается
					fgets($f, длина)    - возвращает количество символов и курсор смещается, или всю строку( если длина не задана или длина больше символов в строке)
					fgetss($f)          - аналогично fgets, заменяет html сущности
					fread($f, filesize('путь'))  - зачитать весь файл в виде одной строки

		            fseek($f, смещение) - переместить курсор
		            rewind($f) - курсор вначло
					ftell($f) - Текущая позиция курсора

		            fwrite($f,'new')    - записать с позиции курсора, при этом заменяет!


            ВЫСОКИЙ УРОВЕНЬ
					file('путь')                     -  на чтение, зачитает файл построчно в массив
					file_get_contents('путь')       -  на чтение, зачитает файл построчно в строку
                    explode(';', $str)              - разбить строку в массив по разделителю
					file_put_contents('путь','asdas', FILE_APPEND) - записать, FILE_APPEND - добавить вконец, без него сотрет , вернет false или кол-во байт, которое записалось


            ПАПКИ
					mkdir('путь' , право, рекурсивно)       - Создать папку, 0777 - максимальное право  	mkdir('files/test/terst', 0777, true)
		            rmdir('путь') - удалить папку. Удаляемая папка должна быть пустой!!! Рекурсивного удаления нет!!! все проверяес ручками.


		            $d = opendir('files/test')      - открыть папку для чтения
		            closedir($d)                    - закрыть папку
		            $f = readdir($d)                - зачитать и сместить указатель
                                                        .   - указатель текущего каталога    (Можно написать  opendir('./test') - открой в текущем каталоге папку test)
                                                        ..  - указатель родительского каталога

                    scandir('files/test')           - зачитает всю папку, вернет массив






*/ ?><?

//Дописать в начало
/*
$f = fopen('files/my.txt', "r+");
$old = fread($f, filesize('files/my.txt'));
fseek($f, 0);
fwrite($f, "new\n");
fwrite($f, $old);
fclose($f);
*/

//echo "<pre>";
//print_r(file('files/my.txt'));
//echo "</pre>";
//
//echo "<pre>";
//print_r(file_get_contents('files/my.txt'));
//echo "</pre>";
//
//file_put_contents('files/my.txt','asdas');


//mkdir('files/test/terst', 0777,true);
//rmdir('files/test/terst');

//Зачитываем файлы в папке
/*
$d = opendir('files/test');
while ($f = readdir($d)) {
	if ($f == '.' || $f == '..') {
		continue;
	}
	if(is_file('files/test/'.$f)){
		echo $f.'<br>';
	}

}
closedir($d);
*/


//echo "<pre>";
//print_r(scandir('files/test'));
//echo "</pre>";

