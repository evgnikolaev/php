<? /*

        1) ПОЛУЧАЕМ ДАННЫЕ ОТ ПОЛЬЗОВАТЕЛЯ

	        взаимодействие через url и через формы
            <form> - атрибуты action - по умолчанию уходит на тот же путь, method - по умолчанию GET

	        http://asdas.com/path/index.php?param1=value1
				http://         - схема или протокол
				asdas.com       - домен или хост
		        path/index.php  - путь по сайту
		        param1=value1   - параметры

	        $_GET - суперглобальный массив (поиск, фильтры, сортировка) , Небезопасно,
			Идеальная ситуация когда у нас есть одна точка входа на сайт - пример get_routing (В зависимости от гет-параметра подключаем тот или иной файл)



	        $_POST - суперглобальный массив (авторизация, передача больших текстов, загрузка файлов)

            $_REQUEST - попадает все и  GET и POST  (если одинаковые имена POST важнее)


            $_SERVER - Много полезной информации
                        хост,
                        referer         - откуда пришли,
                        query_string    - строка с параметрами
                        request_uri     - строка, путь к сайту и параметры
                        request_method  - метод
						remote_addr     - ip, с которого пришли, можно блокировать


            Очистка POST
                После того как все успешно добавилось, нужно перезапросить при помоци GET или редиректнуть.
                Для этого есть header(заголовки)  ->  header('Location:index.php');
                !!!!!  Заголовки отправляем до того, пока отправилась хотя бы одна строка  !!!!!
                !!!!!  как только отправился контент, браузер не сможет принять заголовки  !!!!!


*/ ?><?
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
	if (!empty($_POST['name'])) {
		header('Location:index.php?mes=succes');  //перезапрашиваю при помоци GET
	}
}
?>

<form method="POST">
	<input type="text" name="name">
	<input type="text" name="email" value="<?= (!empty($_POST['email'])) ? $_POST['email'] : ''; ?>">
	<button>submit</button>
</form>

