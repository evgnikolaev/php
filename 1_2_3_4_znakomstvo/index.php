<?
/*
  http://test-php/

	1) УРОВНИ ОШИБОК
			Fatal_Error - код не продолжится
		    Warning     - код продолжится
		    Notice      (как устарвшая например, доступ к переменноы, которая не объявлена)


			php.ini                 - настройки php, какие ошибки показывать
			error_reporting(E_ALL)  - какие ошибки показывать ( E_ALL - все , 0 - не показать) ; E_ALL & ~E_NOTICE  - все кроме  E_NOTICE
			ini_set('display_errors', 0); - меняем настройку php.ini в коде, ставим на продакшн
			echo $asd;// например выведет огибку notice , так как $asd нет


	2) ТИПЫ
			integer
			float
			boolean
			string
			array
			object
			resourse (при подключении сторонних скриптов)
			null


	3) ПРИВЕДЕНИЕ ТИПОВ

			gettype('string')       - узнать тип
			(int)'string'           - привести к integer
			(boolean)'string'       - привести к boolean

			echo true + '23s';      - 24, математическими операндами приводится к числам
			echo '23s' .  true;     -  операндом конкатенации приводится все к строке
			'qwe'  >  1             - false (true   >  true), приводится все к булеву


			define('ASD',45)    - Константа,  лучше ресурс, массив тоже здесь не хранить
			ASD = 2;            - ошибка нельзя переписать
			echo ASD;           - вывод константы
			defined('ASD')      - объявлена ли константа

			$a;
			isset($a)             - true, была ли проинициализирована переменная
			empty($a)             - false, переменная пустая?
			is_*()                - проверить тип,      is_int() - это integer?      is_number('012')  - можно ли привести это к числу?
			unset($a)             - удалить переменную


	4) Массиа
			$arr = [];      - массив, ключи могут содержать любые типы внутри

			$arr = ['as' => 'as', true => 'ddd', array() => 'ddd']; //те ключи которые сможет перевести к строке, переведет. array() не сможет.
																	// вернет { ["as"]=> string(2) "as" [1]=> string(3) "ddd" }

			$ar = [
				'first',
				2 => 'second',
				'third',        // Добавиться ключ последний максимльный 2+1 = 3
				3 => 'third2'   // 3 ключ, который вышеперепишется этим
			];


	5) Подключение файлов
			include ''      - подключение относительно текущего файла. warning  (когда неважные файлы, вьюшки)
			require ''      - подключение относительно текущего файла. fatalerror  (когда важные вещи подключаем)

 */
?>
<?
